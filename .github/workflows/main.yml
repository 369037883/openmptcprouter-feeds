name: Build OpenMPTCProuter
on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        OMR_TARGET: ['x86_64']

    steps:
    - name: Prepare
      run: |
        sudo apt-get update
        sudo apt-get install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler
    - name: Clone source code
      env: 
        REPO_URL: https://github.com/ysurac/openmptcprouter
        REPO_BRANCH: develop
      run: |
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openmptcprouter
    - name: Build toolchain
      working-directory: /openmptcprouter
      env:
        OMR_TARGET: ${{matrix.OMR_TARGET}}
        OMR_FEED_URL: https://github.com/ysurac/openmptcprouter-feeds
        OMR_FEED_SRC: develop
      run: |
        sh build.sh prepare {tools,toolchain}/install -j$(nproc)
        #echo -e "$OMR_PRIVKEY" > /home/runner/work/openmptcprouter-feeds/openmptcprouter-feeds/openmptcprouter/${{ env.OMR_TARGET }}/source/key-build
        #echo -e "$OMR_PUBKEY" > /home/runner/work/openmptcprouter-feeds/openmptcprouter-feeds/openmptcprouter/${{ env.OMR_TARGET }}/source/key-build.pub
    - name: Build packages
      working-directory: /openmptcprouter
      run: |
        make IGNORE_ERRORS=m package/{compile,install,index} -j$(nproc)
    - name: Build image
      working-directory: /openmptcprouter
      run: |
        make IGNORE_ERRORS=m target/install -j$(nproc)
      
