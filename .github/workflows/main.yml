name: Build OpenMPTCProuter
on: [push]

env:
  REPO_URL: 'https://github.com/ysurac/openmptcprouter'
  OMR_TARGET: 'x86_64'
  OMR_KERNEL: '5.4'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Branch name
      id: branch_name
      run: |
        echo ::set-output name=SOURCE_NAME::${GITHUB_REF#refs/*/}
        echo ::set-output name=SOURCE_BRANCH::${GITHUB_REF#refs/heads/}
        echo ::set-output name=SOURCE_TAG::${GITHUB_REF#refs/tags/}
    - name: Prepare
      run: |
        sudo apt-get update
        sudo apt-get install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler
    - name: Clone source code
      env: 
        REPO_URL: https://github.com/ysurac/openmptcprouter
        SOURCE_NAME: ${{ steps.branch_name.outputs.SOURCE_NAME }}
      run: |
        git clone --depth 1 $REPO_URL openmptcprouter
        cd openmptcprouter
        if [ "$SOURCE_NAME" != "Test-Github-Actions" ] && [ "$SOURCE_NAME" != "develop" ]; then
          git checkout master
        else
          git checkout develop
        fi
        git pull
    - name: Build toolchain
      working-directory: ./openmptcprouter
      env:
        OMR_FEED_URL: https://github.com/ysurac/openmptcprouter-feeds
        SOURCE_NAME: ${{ steps.branch_name.outputs.SOURCE_NAME }}
      run: |
        OMR_FEED_SRC="${SOURCE_NAME}" sh build.sh prepare {tools,toolchain}/install -j$(nproc)
        #echo -e "${{ secrets.OMR_PRIVKEY }}" > $OMR_TARGET/source/key-build
        #echo -e "${{ secrets.OMR_PUBKEY }}" > $OMR_TARGET/source/key-build.pub
    - name: Build packages
      working-directory: ./openmptcprouter
      run: |
        make IGNORE_ERRORS=m -C $OMR_TARGET/source package/{compile,install,index} -j$(nproc)
    - name: Build image
      working-directory: ./openmptcprouter
      run: |
        make IGNORE_ERRORS=m -C $OMR_TARGET/source target/install -j$(nproc)
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.OMR_TARGET }}
        path: ./openmptcprouter/${{ env.OMR_TARGET }}/source/bin
    - if: steps.branch_name.outputs.SOURCE_BRANCH == ''
      name: Deploy - Create directory
      uses: fifsky/ssh-action@master
      env:
          SOURCE_NAME: ${{ steps.branch_name.outputs.SOURCE_NAME }}
          SOURCE_BRANCH: ${{ steps.branch_name.outputs.SOURCE_BRANCH }}
          SOURCE_TAG: ${{ steps.branch_name.outputs.SOURCE_TAG }}
      with:
        command: |
          mkdir -p deploy/release/${{env.SOURCE_TAG}}/${{env.OMR_TARGET}}
        host: ${{ secrets.OMR_DEPLOY_HOST }}
        user: deploy
        port: ${{ secrets.OMR_DEPLOY_PORT }}
        key: ${{ secrets.PRIVATE_KEY }}
    - if: steps.branch_name.outputs.SOURCE_BRANCH != ''
      name: Deploy - Create directory
      uses: fifsky/ssh-action@master
      env:
          SOURCE_NAME: ${{ steps.branch_name.outputs.SOURCE_NAME }}
          SOURCE_BRANCH: ${{ steps.branch_name.outputs.SOURCE_BRANCH }}
          SOURCE_TAG: ${{ steps.branch_name.outputs.SOURCE_TAG }}
      with:
        command: |
          mkdir -p deploy/${{env.SOURCE_BRANCH}}/${{env.OMR_KERNEL}}/${{env.OMR_TARGET}}
        host: ${{ secrets.OMR_DEPLOY_HOST }}
        user: deploy
        port: ${{ secrets.OMR_DEPLOY_PORT }}
        key: ${{ secrets.PRIVATE_KEY }}
    - if: steps.branch_name.outputs.SOURCE_BRANCH == ''
      name: Deploy - Upload via rsync
      uses: burnett01/rsync-deployments@4.1
      with:
        switches: -av --delete-after
        remote_path: deploy/release/${{env.SOURCE_TAG}}/${{env.OMR_TARGET}}
        path: ./openmptcprouter/${{env.OMR_TARGET}}/source/bin/
        remote_key: ${{ secrets.PRIVATE_KEY }}
        remote_user: deploy
        remote_host: ${{ secrets.OMR_DEPLOY_HOST }}
        remote_port: ${{ secrets.OMR_DEPLOY_PORT }}
      env:
        SOURCE_NAME: ${{ steps.branch_name.outputs.SOURCE_NAME }}
        SOURCE_BRANCH: ${{ steps.branch_name.outputs.SOURCE_BRANCH }}
        SOURCE_TAG: ${{ steps.branch_name.outputs.SOURCE_TAG }}
    - if: steps.branch_name.outputs.SOURCE_BRANCH != ''
      name: Deploy - Upload via rsync
      uses: burnett01/rsync-deployments@4.1
      with:
        switches: -av --delete-after
        remote_path: deploy/${{env.SOURCE_BRANCH}}/${{env.OMR_KERNEL}}/${{env.OMR_TARGET}}
        path: ./openmptcprouter/${{env.OMR_TARGET}}/source/bin/
        remote_key: ${{ secrets.PRIVATE_KEY }}
        remote_user: deploy
        remote_host: ${{ secrets.OMR_DEPLOY_HOST }}
        remote_port: ${{ secrets.OMR_DEPLOY_PORT }}
      env:
        SOURCE_NAME: ${{ steps.branch_name.outputs.SOURCE_NAME }}
        SOURCE_BRANCH: ${{ steps.branch_name.outputs.SOURCE_BRANCH }}
        SOURCE_TAG: ${{ steps.branch_name.outputs.SOURCE_TAG }}     
